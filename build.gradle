plugins {
	id 'java'
	id 'org.springframework.boot' version '3.0.1'
	id 'io.spring.dependency-management' version '1.1.0'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '19'

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation('org.springframework.boot:spring-boot-starter-mustache')
	implementation 'org.springframework.boot:spring-boot-starter-web'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'junit:junit:4.13.1'

	//implementation 'org.springframework.boot:spring-boot-starter-jdbc'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
	runtimeOnly 'com.h2database:h2'

	annotationProcessor('org.projectlombok:lombok')
	testAnnotationProcessor('org.projectlombok:lombok')
	implementation 'org.projectlombok:lombok'

	implementation 'org.apache.httpcomponents:httpclient:4.5.7'

	// JWT
	implementation 'io.jsonwebtoken:jjwt:0.9.1'

	//AppProperties의 @ConfigurationProperties(prefix = "app") 할 때 필요함
	annotationProcessor "org.springframework.boot:spring-boot-configuration-processor"

	// WebClient
	implementation 'org.springframework.boot:spring-boot-starter-webflux'

	//================================chatting에 필요한 라이브러리================================

	//외부 브로커를 사용하기 위해서
	implementation 'org.springframework.boot:spring-boot-starter-reactor-netty'

	//jackson2json에서 LocalDateTime을 handling 하기 위해
	implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310'

	implementation 'org.springframework.boot:spring-boot-starter-amqp'
	implementation 'org.springframework.boot:spring-boot-starter-websocket'
	testImplementation 'org.springframework.amqp:spring-rabbit-test'

	implementation 'org.webjars:sockjs-client:1.0.2'
	implementation 'org.webjars:stomp-websocket:2.3.3'

}

tasks.named('test') {
	useJUnitPlatform()
}
